{"version":3,"sources":["Components/Section/Section.jsx","Components/FeedbackOptions/FeedbackOptions.jsx","Components/Statistics/Statistics.jsx","Components/Notification/Notifacation.jsx","App.js","index.js","Components/FeedbackOptions/FeedbackOptions.module.css"],"names":["Section","title","children","FeedbackOptions","options","handleClick","map","option","index","className","s","feedback__button","type","name","onClick","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","App","state","e","target","console","log","setState","prevState","feedbacksCounter","positivePercentageCalculator","result","percentage","Math","round","keys","Object","this","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"4RAEe,SAASA,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,qCACE,6BAAKD,IACJC,K,oBCHQ,SAASC,EAAT,GAAoD,IAAzBC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,YACjD,OACE,mCACGD,EAAQE,KAAI,SAACC,EAAQC,GAAT,OACX,wBACEC,UAAWC,IAAEC,iBAEbC,KAAK,SACLC,KAAMN,EACNO,QAAST,EALX,SAOGE,GALIC,QCPA,SAASO,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,qCACE,sCAASJ,KACT,yCAAYC,KACZ,qCAAQC,KACR,uCAAUC,KACV,mDAAsBC,EAAtB,UCbS,SAASC,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OACE,mCACE,4BAAIA,M,ICEWC,E,4MACnBC,MAAQ,CACNR,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAEPb,YAAc,SAAAoB,GACZ,IAAMZ,EAAOY,EAAEC,OAAOb,KACtBc,QAAQC,IAAIf,GACZ,EAAKgB,UAAS,SAAAC,GAAS,sBACpBjB,EAAOiB,EAAUjB,GAAQ,MAE5Bc,QAAQC,IAAI,EAAKJ,MAAMX,K,EAEzBkB,iBAAmB,WACjB,MAA+B,EAAKP,MACpC,OADA,EAAQR,KAAR,EAAcC,QAAd,EAAuBC,K,EAGzBc,6BAA+B,WAC7B,IAAMC,EAAS,EAAKF,mBAEdG,EAAqB,IADV,EAAKV,MAAdR,KAC0BiB,EAClC,OAAOE,KAAKC,MAAMF,I,4CAEpB,WACE,IAAMG,EAAOC,OAAOD,KAAKE,KAAKf,OACxBL,EAAQoB,KAAKR,mBACbX,EAAqBmB,KAAKP,+BAChC,OACE,sBAAKvB,UAAU,MAAf,UACE,cAACT,EAAD,CAASC,MAAM,YAAf,SACE,cAACE,EAAD,CACEC,QAASiC,EACThC,YAAakC,KAAKlC,gBAIX,IAAVc,EACC,cAACE,EAAD,CAAcC,QAAQ,sBAEtB,cAACtB,EAAD,CAASC,MAAM,aAAf,SACE,cAACc,EAAD,CACEC,KAAMuB,KAAKf,MAAMR,KACjBC,QAASsB,KAAKf,MAAMP,QACpBC,IAAKqB,KAAKf,MAAMN,IAChBC,MAAOA,EACPC,mBAAoBA,a,GA9CDoB,aCFjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,iBAAmB,6C","file":"static/js/main.111abc4d.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from './FeedbackOptions.module.css';\r\n\r\nexport default function FeedbackOptions({ options, handleClick }) {\r\n  return (\r\n    <>\r\n      {options.map((option, index) => (\r\n        <button\r\n          className={s.feedback__button}\r\n          key={index}\r\n          type=\"button\"\r\n          name={option}\r\n          onClick={handleClick}\r\n        >\r\n          {option}\r\n        </button>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array.isRequired,\r\n  handleClick: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nexport default function Statistics({\r\n  good,\r\n  neutral,\r\n  bad,\r\n  total,\r\n  positivePercentage,\r\n}) {\r\n  return (\r\n    <>\r\n      <p>good:{good}</p>\r\n      <p>neutral:{neutral}</p>\r\n      <p>bad:{bad}</p>\r\n      <p>total:{total}</p>\r\n      <p>positive feedback:{positivePercentage}%</p>\r\n    </>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nexport default function Notification({ message }) {\r\n  return (\r\n    <>\r\n      <p>{message}</p>\r\n    </>\r\n  );\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Section from './Components/Section/Section';\nimport FeedbackOptions from './Components/FeedbackOptions/FeedbackOptions';\nimport Statistics from './Components/Statistics/Statistics';\nimport Notification from './Components/Notification/Notifacation';\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n  handleClick = e => {\n    const name = e.target.name;\n    console.log(name);\n    this.setState(prevState => ({\n      [name]: prevState[name] + 1,\n    }));\n    console.log(this.state[name]);\n  };\n  feedbacksCounter = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n  positivePercentageCalculator = () => {\n    const result = this.feedbacksCounter();\n    const { good } = this.state;\n    const percentage = (good * 100) / result;\n    return Math.round(percentage);\n  };\n  render() {\n    const keys = Object.keys(this.state);\n    const total = this.feedbacksCounter();\n    const positivePercentage = this.positivePercentageCalculator();\n    return (\n      <div className=\"App\">\n        <Section title=\"Feedback:\">\n          <FeedbackOptions\n            options={keys}\n            handleClick={this.handleClick}\n          ></FeedbackOptions>\n        </Section>\n\n        {total === 0 ? (\n          <Notification message=\"No feedback given\" />\n        ) : (\n          <Section title=\"Statistics\">\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={total}\n              positivePercentage={positivePercentage}\n            ></Statistics>\n          </Section>\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedback__button\":\"FeedbackOptions_feedback__button__h8pHw\"};"],"sourceRoot":""}